<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en_US"><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="https://azure.github.io/AppService/feed.xml" rel="self" type="application/atom+xml" /><link href="https://azure.github.io/AppService/" rel="alternate" type="text/html" hreflang="en_US" /><updated>2020-06-01T00:11:54+00:00</updated><id>https://azure.github.io/AppService/feed.xml</id><title type="html">App Service Blog</title><subtitle>Announcements, updates, and release notes from the Azure App Service product team.</subtitle><author><name>Azure App Service</name></author><entry><title type="html">App Service //Build 2020 Recap</title><link href="https://azure.github.io/AppService/2020/05/19/App-Service-Build-2020-recap.html" rel="alternate" type="text/html" title="App Service //Build 2020 Recap" /><published>2020-05-19T00:00:00+00:00</published><updated>2020-05-19T00:00:00+00:00</updated><id>https://azure.github.io/AppService/2020/05/19/App%20Service%20Build%202020%20recap</id><content type="html" xml:base="https://azure.github.io/AppService/2020/05/19/App-Service-Build-2020-recap.html">&lt;p&gt;This year, &lt;a href=&quot;https://mybuild.microsoft.com/&quot;&gt;Microsoft Build&lt;/a&gt; is entirely online. Live and pre-recorded sessions are available for anyone to view. This article is a recap of the sessions from the App Service team, along with links to more information.&lt;/p&gt;

&lt;h2 id=&quot;building-and-managing-net-core-with-app-service&quot;&gt;Building and Managing .NET Core with App Service&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Building web apps with .NET Core? Check out the latest from the App Service team including how to build a continuous delivery pipeline using GitHub Actions, how to use Event Grid to subscribe and act on deployment events and how to monitor your production apps with Health Checks.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://channel9.msdn.com/Events/Build/2020/BOD126/player&quot;&gt;Watch the session here&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;github-actions&quot;&gt;GitHub Actions&lt;/h3&gt;

&lt;p&gt;GitHub Actions is a flexible automation framework that allows developers to (among other things) continuously deploy their applications to App Service.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Azure/webapps-deploy&quot;&gt;Webapps deploy Action&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/azure/actions&quot;&gt;GitHub Actions for Azure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/marketplace?type=actions&quot;&gt;GitHub Actions Marketplace&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;app-service-health-checks&quot;&gt;App Service Health Checks&lt;/h3&gt;

&lt;p&gt;App Service Health Checks will automatically remove and restart unhealthy instances of your application when you are scaled out.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/projectkudu/kudu/wiki/Health-Check-(Preview)&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;event-grid-integration&quot;&gt;Event Grid Integration&lt;/h3&gt;

&lt;p&gt;Event Grid is a high performance publish/subscribe messaging system. App Service now emits events that can be handled with Functions, Logic Apps, and more.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://azure.github.io/AppService/2020/05/11/event-grid-integration.html&quot;&gt;Getting started guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/event-grid/overview&quot;&gt;Event Grid overview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/event-grid/compare-messaging-services&quot;&gt;Comparison of Azure messaging services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;migrate-applications-to-azure-app-service&quot;&gt;Migrate Applications to Azure App Service&lt;/h2&gt;

&lt;p&gt;See how Azure is making it easy to quickly get your application running on App Service. We’ll show you how to use Migration Assistant for moving IIS sites and Linux containers to the cloud.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mybuild.microsoft.com/sessions/737d89e2-4255-4017-89df-2aa2adf9e348&quot;&gt;Watch the session here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;faq&quot;&gt;FAQ&lt;/h2&gt;

&lt;p&gt;Many of you attended our “Ask the Experts” live session and sent us your questions. Here are some common questions you asked, along with their answers.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Can you use LetsEncrypt certificates with Azure App Services?&lt;/strong&gt; You’re still able to use Let’s Encrypt certs with App Service, however there is no official support when it comes to integrating it with auto-renew. We have &lt;a href=&quot;https://azure.microsoft.com/updates/secure-your-custom-domains-at-no-cost-with-app-service-managed-certificates-preview/&quot;&gt;App Service Managed Certificates&lt;/a&gt;, which is our free certificate offering that supports auto-renew. This feature is currently in preview and only currently supports CNAME Records. &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/configure-ssl-certificate#create-a-free-certificate-preview&quot;&gt;Documentation&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;What is the status for App Service Managed Certificates supporting apex/naked domains?&lt;/strong&gt; This is the next milestone for this feature that we are currently working on. We don’t have an ETA to provide as of now.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Is it a good strategy to use deployment slots to define environments (eg. myapp, myapp/uat, myapp/qa) or would it be better to have different resources for each environment? Would it affect the performance of the main prod “myapp” service?&lt;/strong&gt; You can certainly use slots to stage your test, QA, and other environments. This works especially well if your team uses the Gitflow branching strategy, as each branch can be &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/deploy-best-practices#use-deployment-slots&quot;&gt;continuously deployed to a staging slot&lt;/a&gt;. If you are worried about the extra slots consuming too many resources, you can actually host the production slot on it’s own, independent App Service Plan.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;What is the status for the different logs with the Azure Monitor integration?&lt;/strong&gt; We will be releasing AppServiceAppLogs for Windows soon – estimating the next two/three months. We don’t have an ETA for the other logs as of now.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Azure App Service</name></author><summary type="html">This year, Microsoft Build is entirely online. Live and pre-recorded sessions are available for anyone to view. This article is a recap of the sessions from the App Service team, along with links to more information.</summary></entry><entry><title type="html">The Ultimate Guide to Running Healthy Apps in the Cloud</title><link href="https://azure.github.io/AppService/2020/05/15/Robust-Apps-for-the-cloud.html" rel="alternate" type="text/html" title="The Ultimate Guide to Running Healthy Apps in the Cloud" /><published>2020-05-15T00:00:00+00:00</published><updated>2020-05-15T00:00:00+00:00</updated><id>https://azure.github.io/AppService/2020/05/15/Robust%20Apps%20for%20the%20cloud</id><content type="html" xml:base="https://azure.github.io/AppService/2020/05/15/Robust-Apps-for-the-cloud.html">&lt;p&gt;Modern-day data centers are extremely complex and have many moving parts. VMs can restart or move, systems are upgraded, and file servers are scaled up and down. All these events are to be expected in a cloud environment. However, you can make your cloud application resilient to these events by following best practices. This document outlines 13 crucial steps that you can take to ensure that your app is cloud ready. By taking these steps, you will ensure that any events in the data center will have negligible effects on your app and that your app will be more resilient and future proof.&lt;/p&gt;

&lt;p&gt;As mentioned above, your instances are expected to and will restart. They will be upgraded and will sometimes suffer from file server movements. However you can make your app resilient to all these incidents. In order to guarantee the maximum uptime for your app, &lt;strong&gt;please ensure that you follow all practices&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;use-multiple-instances&quot;&gt;Use Multiple Instances&lt;/h2&gt;

&lt;p&gt;Running your app on only one VM instance is an immediate single point-of-failure. By ensuring that you have multiple instances allocated to your app, if something goes wrong with any particular instance, your app will still be able to respond to requests going to the other instances. Keep in mind that your &lt;strong&gt;app code should be able to handle multiple instances&lt;/strong&gt; without synchronization issues when reading from or writing to data sources. You can allocate multiple instances to your app using the “Scale out (App Service Plan)” blade:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/multiple-instances.png&quot; alt=&quot;multiple-instances&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To avoid a single point-of-failure, run your app with &lt;strong&gt;at least 2-3 instances&lt;/strong&gt;. This is especially important if your app takes considerable time to start (known as cold start). Running more than one instance ensures that your application is available when App Service moves or upgrades the underlying VM instances. You can also configure rules to automatically scale out based on predefined rules such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Time of day (when the app has the most traffic)&lt;/li&gt;
  &lt;li&gt;Resource utilization (memory, CPU, etc.)&lt;/li&gt;
  &lt;li&gt;A combination of both!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Learn More&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/azure-monitor/platform/autoscale-get-started?toc=/azure/app-service/toc.json&quot;&gt;Get started with Autoscale in Azure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://michaelcandido.com/app-service-warm-up-demystified/&quot;&gt;App Service Warm-Up Demystified&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;update-your-default-settings&quot;&gt;Update your default settings&lt;/h2&gt;

&lt;p&gt;App Service has many settings for developers to configure the web app to their use case. &lt;strong&gt;Always-On&lt;/strong&gt; keeps your VM instances alive even when no requests have been received in the last 20 minutes. By default, Always-On is disabled; enabling Always-On will limit application cold starts. &lt;strong&gt;ARR Affinity&lt;/strong&gt; creates sticky sessions so that clients will connect to the same app instance on subsequent requests. However, ARR Affinity can cause unequal distribution of requests between your instances and possibly overload an instance. For production apps that are aiming to be robust, it is recommended to set &lt;strong&gt;Always on to On&lt;/strong&gt; and &lt;strong&gt;ARR Affinity to Off&lt;/strong&gt;. Disabling ARR Affinity assumes that your application is either stateless, or the session state is stored on a remote service such as a cache or database.&lt;/p&gt;

&lt;p&gt;You can change these settings in the configurations section of the Azure Portal, under the &lt;em&gt;General Settings&lt;/em&gt; tab:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/alwayson.jpg&quot; alt=&quot;alwayson&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn More&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/app-service/configure-common#configure-general-settings&quot;&gt;Configure an App Service app in the Azure portal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://azure.github.io/AppService/2016/05/16/Disable-Session-affinity-cookie-(ARR-cookie)-for-Azure-web-apps.html&quot;&gt;Disable Session affinity cookie (ARR cookie) for Azure web apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;use-production-hardware&quot;&gt;Use Production Hardware&lt;/h2&gt;

&lt;p&gt;App Service offers a variety of hardware tiers (also known as SKUs) to suit different customer needs. When creating a new App Service Plan, you have an option to select a different hardware tier for your plan:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/pricing.jpg&quot; alt=&quot;pricing&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If your App Service Plan is used for production, please ensure that your App Service Plan is running on one of the recommended “production” pricing tiers. Moreover, if your application is resource intensive, make sure to select the appropriate pricing tier within the recommended ones according to the need of your app. For example, if your application consumes a lot of CPU cycles, running on an S1 pricing tier will not be ideal as it could potentially cause high CPU that would cause downtime or slowness on your app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn More&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/app-service/manage-scale-up&quot;&gt;Scale up an app in Azure App Service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;leverage-deployment-slots&quot;&gt;Leverage Deployment Slots&lt;/h2&gt;

&lt;p&gt;Before deploying your new code to production, you can leverage the Deployment Slots feature in App Services to test your changes. Deployment slots are live apps with their own host names. App content and configurations elements can be swapped between two deployment slots, including the production slot.&lt;/p&gt;

&lt;p&gt;Deploying your application to a non-production slot has the following benefits:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You can validate app changes in a staging environment before swapping it into the production slot.&lt;/li&gt;
  &lt;li&gt;Deploying an app to a slot first and swapping it into production makes sure that all instances of the staging slot are warmed up before swapping into production. This eliminates downtime when you deploy your app. The traffic redirection is seamless, and no requests are dropped because of swap operations. You can automate this entire workflow by configuring auto swap.&lt;/li&gt;
  &lt;li&gt;After a swap, the slot with previously staged app now has the previous production app. If the changes swapped into the production slot aren’t as you expect, you can perform the same swap immediately to get your “last known good site” back.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/slots.jpg&quot; alt=&quot;slots&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Please note that Deployment Slots are only available for Standard, Premium, or Isolated App Service plan tiers&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We highly recommend using &lt;strong&gt;Swap with Preview&lt;/strong&gt;. Swap with Preview allows you to test the app in your staging slots against your production settings and also warm up the app. After doing your tests and warming up all the necessary paths, you can then complete the swap and the app will start receiving production traffic &lt;strong&gt;without restarting&lt;/strong&gt;. This has a high impact on your app’s availability &amp;amp; performance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn More&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/app-service/deploy-staging-slots&quot;&gt;Set up staging environments in Azure App Service&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ruslany.net/2015/10/azure-web-app-deployment-slot-swap-with-preview/&quot;&gt;Azure Web App Deployment Slot Swap with Preview&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/app-service/deploy-best-practices#use-deployment-slots&quot;&gt;Deployment best practices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;set-your-health-check-path&quot;&gt;Set your Health Check path&lt;/h2&gt;

&lt;p&gt;App Service allows you to specify a health check path on your apps. The platform pings this path to determine if your application is healthy and responding to requests. When your site is scaled out to multiple instances, App Service will exclude any unhealthy instance(s) from serving requests, improving your overall availability. Your app’s health check path should poll the critical components of your application, such as your database, cache, or messaging service. This ensures that the status returned by the health check path is an accurate picture of the overall health of your application.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Go to &lt;em&gt;Development Tools&lt;/em&gt; &amp;gt; &lt;em&gt;Resource Explorer&lt;/em&gt; on the web app blade for Azure portal:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/health-check-1.jpg&quot; alt=&quot;health-check-1&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the resource explorer page, expand the “config” section and click the “web” tab. Add an element with the name, “healthCheckPath”, and value is the path of your health-check url that our service will ping.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/health-check-2.png&quot; alt=&quot;health-check-2&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Please note that the Health Check feature works only when you have two or more instances, which is a &lt;strong&gt;very&lt;/strong&gt; strong recommendation. For a single instance web app, the traffic is never blocked even if that single instance is encountering issues.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Learn More&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/projectkudu/kudu/wiki/Health-Check-(Preview)&quot;&gt;Health Check (Preview)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;use-application-initialization&quot;&gt;Use Application Initialization&lt;/h2&gt;

&lt;p&gt;Application Initialization ensures that your app instances have fully started before they are added to they start serving requests. Application Initialization is used during site restarts, auto scaling, and manual scaling. This is a critical feature where hitting the site’s root path is not sufficient to start the application. For this purpose a warm-up path must be created on the app which should be unauthenticated and App Init should be configured to use this url path.&lt;/p&gt;

&lt;p&gt;Try to make sure that the method implemented by the warm-up url takes care of touching the functions of all important routes and it returns a response only when warm-up is complete. The site will be put into production only when it returns a response (success or failure) and app initialization will assume “everything is fine with the app”. App Initialization can be configured for your app within web.config file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn More&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ruslany.net/2015/09/how-to-warm-up-azure-web-app-during-deployment-slots-swap/&quot;&gt;How to warm up Azure Web App during deployment slots swap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;enable-local-cache&quot;&gt;Enable Local Cache&lt;/h2&gt;

&lt;p&gt;When this feature is enabled, the site content is read, written from the local virtual machine instance instead of fetching from Azure storage (where site content is stored). This will reduce the number of recycles required for the app. It can be enabled through Azure portal from the “General -&amp;gt; Application settings”. On this page under the App settings section add &lt;code class=&quot;highlighter-rouge&quot;&gt;WEBSITE_LOCAL_CACHE_OPTION&lt;/code&gt; as key and &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Always&quot;&lt;/code&gt; as value. Also add the &lt;code class=&quot;highlighter-rouge&quot;&gt;WEBSITE_LOCAL_CACHE_SIZEINMB&lt;/code&gt; with a desired local cache size value up to 2000MB (if not provided, it defaults to 300 MB). It helps to provide the cache size specially when the site contents are more than 300 MB. Ensure that site contents are less than 2000MB for this feature to work. Also it is a good practice to keep it as a slot setting so that it does not get removed with a swap.
&lt;strong&gt;The most important thing to keep in mind here&lt;/strong&gt; is that app should not be doing local disk writes for state persistence of its data/transactions.
External storage like storage containers, db or cosmosDB should be used for storage purposes.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Please note that the behavior of Local Cache depends on the language and CMS you are using. For best results, we recommend using it for .net and .netcore apps as long as local writes are not being done by the app.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/local-cache.png&quot; alt=&quot;multiple-instances&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/local-cache-2.png&quot; alt=&quot;multiple-instances&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn More&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/app-service/overview-local-cache&quot;&gt;Azure App Service Local Cache overview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;auto-heal&quot;&gt;Auto Heal&lt;/h2&gt;

&lt;p&gt;Sometimes your application might experience unexpected behaviors that could be resolved by a simple restart. The Auto Heal features allows you to do exactly that! It allows you to define the ‘condition’ that would trigger Auto Heal and the ‘action’ that Auto Heal will initiate when the condition is met.&lt;/p&gt;

&lt;p&gt;You can create an auto heal mitigation rule by going to “Diagnose and Solve problems” section -&amp;gt; “Diagnostic Tools” tile and then “Auto Healing” under Proactive Tools section.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/autoheal.jpg&quot; alt=&quot;multiple-instances&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Below are example filter values to set up, however if some other value of error code and frequency suits your application, please modify accordingly:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Condition&lt;/th&gt;
      &lt;th&gt;Value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Request Count&lt;/td&gt;
      &lt;td&gt;70&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Status Code&lt;/td&gt;
      &lt;td&gt;500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Sub-status code&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Win32-status code&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Frequency in seconds&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Once the condition above is met, we recommend configuring an action to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Recycle Process&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and add an ‘Override when Action Executes’:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Startup Time for process before auto heal executes: 3600 seconds (1 hour)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Learn More&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://stack247.wordpress.com/2019/05/20/azure-app-service-auto-healing/&quot;&gt;Azure App Service Auto-Healing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://azure.github.io/AppService/2018/09/10/Announcing-the-New-Auto-Healing-Experience-in-App-Service-Diagnostics.html&quot;&gt;Announcing the New Auto Healing Experience in App Service Diagnostics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;minimize-app-service-plan-density&quot;&gt;Minimize App Service Plan Density&lt;/h2&gt;

&lt;p&gt;Ensure not more than 8 apps are running on the app service plan to ensure healthy performance. All the apps running on the app service plan can be seen on “Apps” under “Settings” section in your app service plan on azure portal.&lt;/p&gt;

&lt;p&gt;Learn more about App Service Plan Density Check here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://azure.github.io/AppService/2019/05/21/App-Service-Plan-Density-Check.html&quot;&gt;App Service Plan Density Check&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;monitor-disk-space-usage&quot;&gt;Monitor Disk Space usage&lt;/h2&gt;

&lt;p&gt;Ensure that the disk space used by www folder should be less than 1GB. It is a very healthy practice in reducing downtime during app restarts and hence improve the application performance. File system usage can be tracked from “App Service Plan -&amp;gt; Quotas” section in Azure portal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/diskusage.png&quot; alt=&quot;disk-usage&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;enable-application-insights&quot;&gt;Enable Application Insights&lt;/h2&gt;

&lt;p&gt;Application Insights offers a suite of features that empower you to troubleshoot incidents that happen on your app. You can use it to debug code errors, diagnose performance degradations caused by dependencies and more.&lt;/p&gt;

&lt;p&gt;One of the powerful features of Application Insights is the App Insights Profiler. Enabling Application Insights Profiler provides you with performance traces for your applications that are running in production in Azure. Profiler captures the data automatically at scale without negatively affecting your users. Profiler helps you identify the “hot” code paths that take the longest when handling a web request. Profiler works with .NET applications. To enable it, go to your Application Insights in Azure portal. Click on Performance under Investigate.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;In the Performance pane click on “Configure Profiler”&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/aiprofiler-1.jpg&quot; alt=&quot;ai-1&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the pane that opens after that, click on “Profile Now” to start profiling.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/aiprofiler-2.jpg&quot; alt=&quot;ai-2&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When Profiler is running, it profiles randomly about once per hour and for a duration of two minutes. If your application is handling a steady stream of requests, Profiler uploads traces every hour. 
To view traces, in the Performance pane, select Take Actions, and then select the Profiler Traces button.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/aiprofiler-3.jpg&quot; alt=&quot;ai-3&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;App Insights also allows you to track dependencies in your application. You can leverage this feature to troubleshoot slow requests. To automatically track dependencies from .NET console apps, install the Nuget package &lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.ApplicationInsights.DependencyCollector&lt;/code&gt;, and initialize &lt;code class=&quot;highlighter-rouge&quot;&gt;DependencyTrackingTelemetryModule&lt;/code&gt; as follows:&lt;/p&gt;

    &lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;DependencyTrackingTelemetryModule&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;depModule&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DependencyTrackingTelemetryModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;depModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TelemetryConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Active&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Each request event is associated with the dependency calls, exceptions, and other events that are tracked while your app is processing the request. So if some requests are doing badly, you can find out whether it’s because of slow responses from a dependency. You can see a waterfall view of the requests in the performance blade as well under the “Dependencies” tab:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/dependency.jpg&quot; alt=&quot;ai-4&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can also leverage our newly released &lt;a href=&quot;https://azure.github.io/AppService/2020/04/21/Announcing-Application-Insights-Integration-with-App-Service-Diagnostics.html&quot;&gt;App Insights integration with App Service Diagnostics&lt;/a&gt;, discussed in details here:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn More&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/azure-monitor/app/profiler-overview&quot;&gt;Profile production applications in Azure with Application Insights&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/azure-monitor/app/asp-net-exceptions&quot;&gt;Diagnose exceptions in your web apps with Application Insights&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/azure-monitor/app/asp-net-dependencies#diagnosis&quot;&gt;Dependency Tracking in Azure Application Insights&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;deploy-in-multiple-regions&quot;&gt;Deploy in Multiple Regions&lt;/h2&gt;

&lt;p&gt;You can deploy Azure Front Door or Azure Traffic Manager to intercept traffic before they hit your site. They help in routing &amp;amp; distributing traffic between your instances/regions. In the event that a catastrophic incident happens in one of the Azure Datacenters, you can still guarantee that your app will run and serve requests by investing in one of them. 
&lt;br /&gt;
There are additional benefits to using Front Door or Traffic Manager, such as routing incoming requests based the customers’ geography to provide the shortest respond time to customers and distribute the load among your instances in order not to overload one of them with requests.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn More&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/app-service/web-sites-traffic-manager&quot;&gt;Controlling Azure App Service traffic with Azure Traffic Manager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/frontdoor/quickstart-create-front-door&quot;&gt;Quickstart: Create a Front Door for a highly available global web application&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;check-app-service-diagnostics&quot;&gt;Check App Service Diagnostics&lt;/h2&gt;

&lt;p&gt;Finally, you can check the progress you’ve accomplished in making your app resilient by leverage the “Best Practices” detectors available in App Service Diagnostics here:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/bestpractices.jpg&quot; alt=&quot;bestpractices&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You’ll be presented by 2 options:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Best Practices for Availability &amp;amp; Performance&lt;/li&gt;
  &lt;li&gt;Best Practices for Optimal Configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We recommend that you follow all the best practices listed in those detectors and get them all to green!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Finally, we also recommend that you take a look at the &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/architecture/patterns/&quot;&gt;Cloud Design Patterns&lt;/a&gt; document to minimize the application start time and follow more resiliency recommendations.&lt;/p&gt;

&lt;p&gt;Feel free to post any questions about App Resiliency on the &lt;a href=&quot;https://social.msdn.microsoft.com/forums/azure/en-US/home?forum=windowsazurewebsitespreview&quot;&gt;MSDN Forum&lt;/a&gt;.&lt;/p&gt;</content><author><name>Azure App Service</name></author><category term="best practice" /><summary type="html">Modern-day data centers are extremely complex and have many moving parts. VMs can restart or move, systems are upgraded, and file servers are scaled up and down. All these events are to be expected in a cloud environment. However, you can make your cloud application resilient to these events by following best practices. This document outlines 13 crucial steps that you can take to ensure that your app is cloud ready. By taking these steps, you will ensure that any events in the data center will have negligible effects on your app and that your app will be more resilient and future proof.</summary></entry><entry><title type="html">App Service integration with Event Grid</title><link href="https://azure.github.io/AppService/2020/05/11/event-grid-integration.html" rel="alternate" type="text/html" title="App Service integration with Event Grid" /><published>2020-05-11T00:00:00+00:00</published><updated>2020-05-11T00:00:00+00:00</updated><id>https://azure.github.io/AppService/2020/05/11/event-grid-integration</id><content type="html" xml:base="https://azure.github.io/AppService/2020/05/11/event-grid-integration.html">&lt;p&gt;We are happy to announce the Public Preview of App Service’s integration with Azure Event Grid. &lt;a href=&quot;https://docs.microsoft.com/azure/event-grid/overview&quot;&gt;Event Grid&lt;/a&gt; is a publish/subscribe messaging service that allows you to easily build event-based architectures. Event Grid is heavily integrated into Azure services, allowing you to react to events coming from your resources.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;#get-started&quot;&gt;the quickstart&lt;/a&gt; below to get started!&lt;/p&gt;

&lt;h2 id=&quot;integrated-events&quot;&gt;Integrated Events&lt;/h2&gt;

&lt;p&gt;App Service now emits 13 events to Event Grid. These events span configuration changes, slot swaps, restarts, backups, and more. If you have an idea for an event type that you would like to see added, let us know on &lt;a href=&quot;https://feedback.azure.com/forums/169385-web-apps&quot;&gt;UserVoice&lt;/a&gt;.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Event Type&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.Web/sites.BackupOperationStarted&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Triggered when a &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/manage-backup&quot;&gt;backup&lt;/a&gt; has started&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.Web/sites.BackupOperationCompleted&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Triggered when a &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/manage-backup&quot;&gt;backup&lt;/a&gt; has completed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.Web/sites.BackupOperationFailed&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Triggered when a &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/manage-backup&quot;&gt;backup&lt;/a&gt; has failed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.Web/sites.RestoreOperationStarted&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Triggered when a &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/web-sites-restore&quot;&gt;restoration&lt;/a&gt; from a backup has started&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.Web/sites.RestoreOperationCompleted&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Triggered when a &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/web-sites-restore&quot;&gt;restoration&lt;/a&gt; from a backup has completed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.Web/sites.RestoreOperationFailed&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Triggered when a &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/web-sites-restore&quot;&gt;restoration&lt;/a&gt; from a backup has failed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.Web/sites.SlotSwapStarted&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Triggered when a &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/deploy-staging-slots&quot;&gt;slot swap&lt;/a&gt; has started&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.Web/sites.SlotSwapCompleted&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Triggered when a &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/deploy-staging-slots&quot;&gt;slot swap&lt;/a&gt; has completed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.Web/sites.SlotSwapFailed&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Triggered when a &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/deploy-staging-slots&quot;&gt;slot swap&lt;/a&gt; has failed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.Web/sites.SlotSwapWithPreviewStarted&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Triggered when a &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/deploy-staging-slots&quot;&gt;slot swap&lt;/a&gt; with preview has started&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.Web/sites.SlotSwapWithPreviewCancelled&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Triggered when a &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/deploy-staging-slots&quot;&gt;slot swap&lt;/a&gt; with preview has been cancelled&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.Web/sites.AppUpdated&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Triggered when a site has been restarted, stopped, or the app settings have changed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.Web/serverfarms.AppServicePlanUpdated&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Triggered when an App Service Plan is updated&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://aka.ms/event-grid-schema-app-service&quot;&gt;More information about these events&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;get-started&quot;&gt;Get started&lt;/h2&gt;

&lt;p&gt;Event Grid is a flexible service that enables developers to architect cutting-edge, event-driven patterns. For example, you can &lt;a href=&quot;https://docs.microsoft.com/azure/event-grid/resize-images-on-storage-blob-upload-event?tabs=dotnet&quot;&gt;resize images uploaded to Azure Storage&lt;/a&gt;, or &lt;a href=&quot;https://docs.microsoft.com/azure/event-grid/monitor-virtual-machine-changes-event-grid-logic-app&quot;&gt;get an email when your VM scales up&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This quickstart will walk through how to get started with a simple event handler, but we are excited to see what you can build with the newly integrated events from App Service.&lt;/p&gt;

&lt;h3 id=&quot;create-a-function-with-an-event-grid-trigger&quot;&gt;Create a Function with an Event Grid trigger&lt;/h3&gt;

&lt;p&gt;First, create a new Azure Function with an Event Grid trigger. If you do not already have a Function App in your subscription, follow &lt;a href=&quot;https://docs.microsoft.com/azure/azure-functions/functions-create-function-app-portal&quot;&gt;these instructions to create a new Function App&lt;/a&gt;. Once you have your Function App, browse to it in the Portal.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;In the list of Functions, select the “&lt;strong&gt;+&lt;/strong&gt;” to add a new Function.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the following screen, filter the triggers by searching for “event grid”. Select “Azure Event Grid trigger” and enter a name for the Function. Finally, click “Create”.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/05/event-grid/create-event-grid-triggered-function.png&quot; alt=&quot;Create an evet grid triggered function&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;add-the-function-as-an-endpoint&quot;&gt;Add the Function as an endpoint&lt;/h3&gt;

&lt;p&gt;Now that the Event Grid triggered Function is created, we will add it as a handler for events from our Azure Webapp. Navigate to one of your Azure Webapps in the Portal.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Select the “Events” button in the toolbar on the left side of the blade.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/05/event-grid/webapps-events-button.png&quot; alt=&quot;Webapps event button&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This will open a new blade where you can register event handlers. If you have used Event Grid before with other Azure services, this blade will look familiar.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/05/event-grid/events-tab.png&quot; alt=&quot;Events page&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click “+ Event Subscription” at the top of the blade. In the following screen, enter a name for the event subscription and select “Azure Function” as the Endpoint Type. Next, click “Select an endpoint” and find your Event Grid triggered Function using the filters in the context menu. Finally, click “Create”.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/05/event-grid/events-subscription-form.png&quot; alt=&quot;events subscription form&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;

&lt;p&gt;You have now set up an Azure Function as an event handler for your Event Grid subscription. Whenever events are emitted from your web app, this Function will execute. Click back to the “Events” tab to see a timeline of your events.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/05/event-grid/events-timeline.png&quot; alt=&quot;events timeline&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next steps&lt;/h2&gt;

&lt;p&gt;This quickstart covered only a sliver of Event Grid’s capabilities. You can also use Logic Apps, Hybrid Connections, and web hooks as your event handlers. You can use these handlers to send yourself an email if a backup fails, send information to an on-premises resource, and much more!&lt;/p&gt;

&lt;p&gt;If you have suggestions for events that App Service should emit, let us know on &lt;a href=&quot;https://feedback.azure.com/forums/169385-web-apps&quot;&gt;UserVoice&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;helpful-links&quot;&gt;Helpful links&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/event-grid/concepts&quot;&gt;Event Grid terminology&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/event-grid/compare-messaging-services&quot;&gt;Compare Azure messaging services&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/event-grid/cli-samples&quot;&gt;Azure CLI for Event Grid&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/pricing/details/event-grid/&quot;&gt;Event Grid Pricing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Azure App Service</name></author><summary type="html">We are happy to announce the Public Preview of App Service’s integration with Azure Event Grid. Event Grid is a publish/subscribe messaging service that allows you to easily build event-based architectures. Event Grid is heavily integrated into Azure services, allowing you to react to events coming from your resources.</summary></entry><entry><title type="html">Azure App Service and Azure Functions on Azure Stack Hub 2020 Q2 Released</title><link href="https://azure.github.io/AppService/2020/05/06/App-Service-on-Azure-Stack-Hub-2020-Q2-Update-Released.html" rel="alternate" type="text/html" title="Azure App Service and Azure Functions on Azure Stack Hub 2020 Q2 Released" /><published>2020-05-06T00:00:00+00:00</published><updated>2020-05-06T00:00:00+00:00</updated><id>https://azure.github.io/AppService/2020/05/06/App%20Service%20on%20Azure%20Stack%20Hub%202020%20Q2%20Update%20Released</id><content type="html" xml:base="https://azure.github.io/AppService/2020/05/06/App-Service-on-Azure-Stack-Hub-2020-Q2-Update-Released.html">&lt;p&gt;We have released the 2020 Q2 update to Azure App Service on Azure Stack Hub. This release updates the resource provider and brings the following key capabilities and fixes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Updates to &lt;strong&gt;App Service Tenant, Admin, Functions portals and Kudu tools&lt;/strong&gt;. Consistent with Azure Stack Portal SDK version.&lt;/li&gt;
  &lt;li&gt;Updates &lt;strong&gt;Azure Functions&lt;/strong&gt; runtime to &lt;strong&gt;v1.0.13021&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Updates to core service to improve reliability and error messaging enabling easier diagnosis of common issues.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Updates to the following application frameworks and tools&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;ASP.NET Framework 4.7.2&lt;/li&gt;
      &lt;li&gt;ASP.NET Core 3.1.3&lt;/li&gt;
      &lt;li&gt;ASP.NET Core Module v2 13.1.19331.0&lt;/li&gt;
      &lt;li&gt;PHP 7.4.2&lt;/li&gt;
      &lt;li&gt;Updated Kudu to 86.20224.4450&lt;/li&gt;
      &lt;li&gt;NodeJS
        &lt;ul&gt;
          &lt;li&gt;8.17.0&lt;/li&gt;
          &lt;li&gt;10.19.0&lt;/li&gt;
          &lt;li&gt;12.13.0&lt;/li&gt;
          &lt;li&gt;12.15.0&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;NPM
        &lt;ul&gt;
          &lt;li&gt;5.6.0&lt;/li&gt;
          &lt;li&gt;6.1.0&lt;/li&gt;
          &lt;li&gt;6.12.0&lt;/li&gt;
          &lt;li&gt;6.13.4&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Updates to underlying operating system of all roles&lt;/strong&gt;:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://support.microsoft.com/help/4550929&quot;&gt;2020-04 Cumulative Update for Windows Server 2016 for x64-based Systems (KB4550929)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://support.microsoft.com/help/4550994&quot;&gt;2020-04 Servicing Stack Update for Windows Server 2016 for x64-based Systems (KB4550994)&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Cumulative Updates for Windows Server are now applied to Controller roles as part of deployment and upgrade&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Updated default Virtual Machine and Scale set skus for new deployments&lt;/strong&gt;:
To maintain consistency with our public cloud service, new deployments of Azure App Service on Azure Stack Hub will use the following SKUs for the underlying machines and scale sets used to operate the resource provider&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;Role&lt;/th&gt;
          &lt;th&gt;Minimum SKU&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Controller&lt;/td&gt;
          &lt;td&gt;Standard_A4_v2 - (4 cores, 8192 MB)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Management&lt;/td&gt;
          &lt;td&gt;Standard_D3_v2 - (4 cores, 14336 MB)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Publisher&lt;/td&gt;
          &lt;td&gt;Standard_A2_v2 - (2 cores, 4096 MB)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;FrontEnd&lt;/td&gt;
          &lt;td&gt;Standard_A4_v2 - (4 cores, 8192 MB)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Shared Worker&lt;/td&gt;
          &lt;td&gt;Standard_A4_v2 - (4 cores, 8192 MB)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Small dedicated worker&lt;/td&gt;
          &lt;td&gt;Standard_A1_v2 - (1 core, 2048 MB)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Medium dedicated worker&lt;/td&gt;
          &lt;td&gt;Standard_A2_v2 - (2 cores, 4096 MB)&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Large dedicated worker&lt;/td&gt;
          &lt;td&gt;Standard_A4_v2 - (4 cores, 8192 MB)&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For ASDK deployments, you can scale the instances down to lower SKUs to reduce the core and memory commit but you will experience a performance degradation.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;All other fixes and updates are detailed in the App Service on Azure Stack Hub 2020 Q2 Release Notes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The App Service on Azure Stack Hub Update 8 build number is &lt;strong&gt;87.0.2.10&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Please review the release notes and all &lt;a href=&quot;https://docs.microsoft.com/azure-stack/operator/app-service-release-notes-2020-q2&quot;&gt;&lt;strong&gt;Known issues&lt;/strong&gt;&lt;/a&gt; prior to updating your installation of Azure App Service on Azure Stack Hub.&lt;/p&gt;

&lt;h2 id=&quot;documentation-updates&quot;&gt;Documentation Updates&lt;/h2&gt;

&lt;p&gt;All of the documentation for Azure App Service and Azure Functions on Azure Stack Hub has been reviewed and edited to support this release, to address feedback from customers and to improve the quality of the documentation to support cloud operators.  In addition the articles covering Azure App Service and Azure Functions on Azure Stack Hub have been reclassified under the table of contents to better classify the documentation and to maintain consistency with other resource providers on Azure Stack Hub:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![New documentation TOC structure for App Service on Azure Stack Hub](/AppService/media/2020/05/appservice_on_azure_stack_new_doc_toc.png)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can download the new installer and helper scripts:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aka.ms/appsvcupdateq2installer&quot;&gt;Installer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aka.ms/appsvconmashelpers&quot;&gt;Helper Scripts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please read the updated documentation prior to getting started with deployment:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure-stack/operator/app-service-release-notes-2020-q2&quot;&gt;2020 Q2 Update Release Notes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure-stack/operator/azure-stack-app-service-before-you-get-started&quot;&gt;Prerequisites for deploying App Service on Azure Stack Hub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure-stack/operator/azure-stack-app-service-deploy&quot;&gt;Deploy the App Service Resource Provider&lt;/a&gt; for new deployments&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure-stack/operator/azure-stack-app-service-update&quot;&gt;Update the App Service Resource Provider&lt;/a&gt; for updating existing deployments&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Azure App Service</name></author><category term="Azure Stack" /><summary type="html">We have released the 2020 Q2 update to Azure App Service on Azure Stack Hub. This release updates the resource provider and brings the following key capabilities and fixes:</summary></entry><entry><title type="html">PHP Minor Version Update for July 2020</title><link href="https://azure.github.io/AppService/2020/05/04/PHP-Minor-Version-Update-for-July-2020.html" rel="alternate" type="text/html" title="PHP Minor Version Update for July 2020" /><published>2020-05-04T00:00:00+00:00</published><updated>2020-05-04T00:00:00+00:00</updated><id>https://azure.github.io/AppService/2020/05/04/PHP%20Minor%20Version%20Update%20for%20July%202020</id><content type="html" xml:base="https://azure.github.io/AppService/2020/05/04/PHP-Minor-Version-Update-for-July-2020.html">&lt;p&gt;Latest version updates to PHP&lt;/p&gt;

&lt;p&gt;In June/July 2020, Azure App Service will update the PHP stacks to the latest available versions. For information on the changes in the new versions, please see the change logs on the PHP website.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;PHP Version&lt;/th&gt;
      &lt;th&gt;Change Log&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;5.6.40&lt;sup&gt;1&lt;/sup&gt;&lt;/td&gt;
      &lt;td&gt;http://www.php.net/ChangeLog-5.php#5.6.40 + security fixes from https://github.com/microsoft/php-src/commits/PHP-5.6-security-backports + OpenSSL 1.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7.2.22&lt;/td&gt;
      &lt;td&gt;http://www.php.net/ChangeLog-7.php#7.2.30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7.3.9&lt;/td&gt;
      &lt;td&gt;http://www.php.net/ChangeLog-7.php#7.3.17&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7.4.5&lt;/td&gt;
      &lt;td&gt;http://www.php.net/ChangeLog-7.php#7.4.5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; - PHP v5.6 is past &lt;a href=&quot;https://www.php.net/supported-versions.php&quot;&gt;End-Of-Life&lt;/a&gt;, and is no longer receiving security updates from the community.  However, to ensure our customers have the most secure PHP builds available, we have arranged to temporarily have relevant security fixes from supported versions of PHP backported to PHP v5.6.&lt;/p&gt;</content><author><name>Azure App Service</name></author><category term="PHP" /><summary type="html">Latest version updates to PHP</summary></entry><entry><title type="html">Reduce costs and increase agility with App Service and API Management</title><link href="https://azure.github.io/AppService/2020/05/01/Reduce-costs-and-increase-agility-with-App-Service-and-API-Management.html" rel="alternate" type="text/html" title="Reduce costs and increase agility with App Service and API Management" /><published>2020-05-01T00:00:00+00:00</published><updated>2020-05-01T00:00:00+00:00</updated><id>https://azure.github.io/AppService/2020/05/01/Reduce%20costs%20and%20increase%20agility%20with%20App%20Service%20and%20API%20Management</id><content type="html" xml:base="https://azure.github.io/AppService/2020/05/01/Reduce-costs-and-increase-agility-with-App-Service-and-API-Management.html">&lt;p&gt;In times of rapid change, developers and IT decision-makers must quickly adjust to a drastically evolving landscape. Successful organizations use managed cloud services to reduce operating costs by increasing developer efficiency, and seize new business opportunities by accelerating delivery of innovation.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Try &lt;a href=&quot;https://aka.ms/app-service-apim-demo&quot;&gt;this tutorial&lt;/a&gt; to get started with App Service, GitHub Actions, and API Management.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;host-applications-with-app-service&quot;&gt;Host applications with App Service&lt;/h2&gt;

&lt;p&gt;App Service is a proven managed service for hosting your web apps and mobile backends with deployment APIs, networking integration, and built-in monitoring.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Use your preferred technology stack to increase the speed-to-market&lt;/strong&gt;. Build your applications with .NET, .NET Core, Java, Node.js, Python or PHP. Deploy them as code or Docker containers and integrate with API management in Visual Studio Code or the Azure Portal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Simplify operations with GitHub Actions&lt;/strong&gt;. Use &lt;a href=&quot;https://github.com/features/actions&quot;&gt;GitHub Actions&lt;/a&gt; to automate the testing and deployment of your applications onto App Service’s global infrastructure. The Azure Portal makes it easy to &lt;a href=&quot;https://www.youtube.com/watch?v=b2oyxbSbLPA&quot;&gt;get started&lt;/a&gt; with a guided developer experience. Then &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/deploy-best-practices#use-deployment-slots&quot;&gt;use deployment slots&lt;/a&gt; to coordinate your QA, staging, and production deployments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Isolate and secure applications with enterprise-grade global datacenter network&lt;/strong&gt;. Once your applications are deployed, isolate and secure them in &lt;a href=&quot;https://azure.github.io/AppService/2020/02/27/General-Availability-of-VNet-Integration-with-Windows-Web-Apps.html&quot;&gt;a Virtual Network&lt;/a&gt; or in an &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/environment/intro&quot;&gt;App Service Environment&lt;/a&gt;. Get more secure, high-speed connections to resources on premises or in the cloud and maintain fine-grained control over network traffic.&lt;/p&gt;

&lt;h2 id=&quot;manage-protect-and-publish-apis-with-api-management&quot;&gt;Manage, protect, and publish APIs with API Management&lt;/h2&gt;

&lt;p&gt;API Management lets you manage and protect APIs throughout their lifecycle and publish them to consumers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Increase the speed to market with one-click API import&lt;/strong&gt;. Design the API from scratch or generate it automatically from an API definition file (OpenAPI, WSDL, WADL) or an Azure service (App Service, Functions, Logic Apps).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Simplify management of APIs&lt;/strong&gt;. API Management abstracts the APIs from their implementation, allowing you to transform and iterate on your backend services without impacting API consumers. As the backends evolve and API traffic increases, create new API revisions and versions and monitor the usage with Azure Application Insights, Azure Monitor, or custom solutions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Protect and secure your APIs from abusive users with policies&lt;/strong&gt;. Apply the &lt;a href=&quot;https://docs.microsoft.com/azure/api-management/api-management-access-restriction-policies#LimitCallRateByKey&quot;&gt;rate-limit-by-key&lt;/a&gt; policy to throttle API calls based on any key – for example, IP address or user credentials. Set long-term quotas with the &lt;a href=&quot;https://docs.microsoft.com/azure/api-management/api-management-access-restriction-policies#SetUsageQuotaByKey&quot;&gt;quota-by-key policy&lt;/a&gt; to limit the allowed number of calls or data transfer. Secure your APIs with built-in API subscription keys mechanism, client certificates, or &lt;a href=&quot;https://docs.microsoft.com/azure/api-management/api-management-access-restriction-policies#ValidateJWT&quot;&gt;JWT tokens&lt;/a&gt;. The most convenient way to author policies is to use the Azure portal or the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-apimanagement&quot;&gt;official Visual Studio Code extension&lt;/a&gt; with the autocomplete feature. Examples of more advanced policies are located in &lt;a href=&quot;https://aka.ms/apimpolicyexamples&quot;&gt;this GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Seize new business opportunities by publishing your APIs in the developer portal&lt;/strong&gt;. Azure API Management comes with a &lt;a href=&quot;https://aka.ms/apimdocs/portal&quot;&gt;built-in developer portal&lt;/a&gt;. It is an automatically generated, &lt;a href=&quot;https://aka.ms/apimdocs/customizeportal&quot;&gt;fully customizable&lt;/a&gt; website where visitors can discover your APIs, learn how to use them, try them out interactively, and sign up to acquire access. By publishing your APIs, you can scale your operations and build an ecosystem around your services. You may also monetize them to create new revenue streams.&lt;/p&gt;

&lt;h2 id=&quot;try-the-sample&quot;&gt;Try the sample&lt;/h2&gt;

&lt;p&gt;To get started with App Service and API Management, &lt;a href=&quot;https://aka.ms/app-service-apim-demo&quot;&gt;clone this sample application&lt;/a&gt; and follow the instructions. By the end of the tutorial, you will have set up continuous delivery with GitHub Actions and exposed your backend API with API Management.&lt;/p&gt;</content><author><name>Azure App Service</name></author><summary type="html">In times of rapid change, developers and IT decision-makers must quickly adjust to a drastically evolving landscape. Successful organizations use managed cloud services to reduce operating costs by increasing developer efficiency, and seize new business opportunities by accelerating delivery of innovation.</summary></entry><entry><title type="html">Running .NET 5 (preview) on App Service</title><link href="https://azure.github.io/AppService/2020/04/24/Running-.NET-5-Preview-on-App-Service.html" rel="alternate" type="text/html" title="Running .NET 5 (preview) on App Service" /><published>2020-04-24T00:00:00+00:00</published><updated>2020-04-24T00:00:00+00:00</updated><id>https://azure.github.io/AppService/2020/04/24/Running%20.NET%205%20Preview%20on%20App%20Service</id><content type="html" xml:base="https://azure.github.io/AppService/2020/04/24/Running-.NET-5-Preview-on-App-Service.html">&lt;p&gt;.NET 5 is the latest version to expand the capabilities of .NET by taking the best of Core, Framework, Xamarin, and Mono to create a unified platform for improving developer scenarios. .NET 5 is currently in preview and available for use in existing or new applications. Find more information on the release and how to upgrade an existing project &lt;a href=&quot;https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-5-preview-1&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To get started with .NET 5 on App Service you can use one of two deployment methods. A Self-Contained deployment will allow you to deploy your app on machines that don’t have the runtime installed. You can also deploy your application with a more portable solution using a Container which will package your app and dependencies to run on App Service.&lt;/p&gt;

&lt;h2 id=&quot;local-setup&quot;&gt;Local Setup&lt;/h2&gt;

&lt;p&gt;In order to setup .NET 5 in your application you need to first install the &lt;a href=&quot;https://dotnet.microsoft.com/download/dotnet/5.0&quot;&gt;.NET 5.0 SDK&lt;/a&gt;.  If you’re on Windows using Visual Studio, you will also need to download the latest preview version (at least &lt;a href=&quot;https://visualstudio.microsoft.com/vs/preview/&quot;&gt;16.6&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;self-contained-deployment&quot;&gt;Self-Contained Deployment&lt;/h2&gt;

&lt;p&gt;A Self-Contained deployment enables you to run .NET 5 because it doesn’t rely on the presence of shared components on the target system and all components including Core libraries and runtime are with the application and isolated from other apps.  This way you have sole control of which version your application is running. Self-contained deployments are supported for both Windows and Linux apps. Note that with self-contained applications you should be aware of large deployments and managing updates as this will take up more hard drive space and cause you to be responsible for supplying updated versions of your app with new security patches.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;To complete a self-contained deployment in .NET Core you would first create your project as usual then choose &lt;strong&gt;ASP.NET Core 5.0&lt;/strong&gt; for your apps version after selecting your application template. Select &lt;strong&gt;Create&lt;/strong&gt; and modify your application as needed.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/Dotnet5-VS1.png&quot; alt=&quot;dotnet5&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To publish, simply &lt;strong&gt;Right-Click&lt;/strong&gt; your project and select &lt;strong&gt;publish&lt;/strong&gt;. In the latest version of Visual Studio you can choose where your target publish is from a new menu.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/Dotnet5-VS2.png&quot; alt=&quot;dotnet5&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Then select &lt;strong&gt;Azure App Service (Windows)&lt;/strong&gt; or &lt;strong&gt;Azure App Service (Linux)&lt;/strong&gt; depending on your preference on the following screen.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/Dotnet5-VS3.png&quot; alt=&quot;dotnet5&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Next, choose a previously created App Service or create one from Visual Studio and fill out the required information as you normally would when publishing. When you reach the publish screen click the pencil icon to edit your &lt;strong&gt;Deployment Mode&lt;/strong&gt; for publishing your application.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/Dotnet5-VS4.png&quot; alt=&quot;dotnet5&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Next, Choose the Deployment Mode option and make sure &lt;strong&gt;Self-Contained&lt;/strong&gt; is chosen.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/Dotnet5-VS5.png&quot; alt=&quot;dotnet5&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After you select the Self-Contained option your &lt;em&gt;Target Runtime&lt;/em&gt; will auto-populate to linux-x64 or win-x86 depending on your operating system selection. &lt;strong&gt;Save&lt;/strong&gt; your new settings and click &lt;strong&gt;Publish&lt;/strong&gt; on the preceding screen to publish to App Service and launch your application using .NET Core 5. More information on self-contained deployment can be found &lt;a href=&quot;https://docs.microsoft.com/dotnet/core/deploying/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;container-deployment&quot;&gt;Container Deployment&lt;/h2&gt;

&lt;p&gt;The other option for running your .NET 5 application is to deploy a Docker container to App Service on Linux or Windows (Premium SKU only).  When deploying a container, you are packaging the application and its dependencies into a Linux or Windows based image to run on the App Service platform.  This enables your application to be more portable in nature as it is not reliant on the host operating system and has the runtime and SDK added into the image.&lt;/p&gt;

&lt;p&gt;Once you have your application setup for .NET 5, the steps to deploy a containerized application would be the same as any other container deployment.  &lt;strong&gt;Right-click&lt;/strong&gt; your project, &lt;strong&gt;Add -&amp;gt; Docker Support&lt;/strong&gt; .  Your .NET Core project will have a new Dockerfile added with the .NET 5.0 base image and SDK ready for you to publish.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/Dotnet5-VS6.png&quot; alt=&quot;dotnet5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After you have added Docker support, you will publish it to a registry, and create your App Service as usual. See our documentation for more detail on &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/app-service-web-get-started-windows-container&quot;&gt;deploying a containerized application&lt;/a&gt;.&lt;/p&gt;</content><author><name>Azure App Service</name></author><category term="dotnet" /><category term="deployment" /><summary type="html">.NET 5 is the latest version to expand the capabilities of .NET by taking the best of Core, Framework, Xamarin, and Mono to create a unified platform for improving developer scenarios. .NET 5 is currently in preview and available for use in existing or new applications. Find more information on the release and how to upgrade an existing project here.</summary></entry><entry><title type="html">Announcing Application Insights integration with App Service Diagnostics</title><link href="https://azure.github.io/AppService/2020/04/21/Announcing-Application-Insights-Integration-with-App-Service-Diagnostics.html" rel="alternate" type="text/html" title="Announcing Application Insights integration with App Service Diagnostics" /><published>2020-04-21T00:00:00+00:00</published><updated>2020-04-21T00:00:00+00:00</updated><id>https://azure.github.io/AppService/2020/04/21/Announcing%20Application%20Insights%20Integration%20with%20App%20Service%20Diagnostics</id><content type="html" xml:base="https://azure.github.io/AppService/2020/04/21/Announcing-Application-Insights-Integration-with-App-Service-Diagnostics.html">&lt;p&gt;App Services Diagnostics is a powerful tool that allows you to troubleshoot and mitigate issues within your application. The rich set of tools under the App Services Diagnostics carefully analyze all the telemetry emitted by App Services platform and suggests recommendations and troubleshooting steps that help in keeping your apps up and healthy. We are happy to announce that &lt;strong&gt;App Services Diagnostics has now deeper and better integration with Application Insights&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;With the click of a button, you can connect an Application Insights resource with App Service diagnostics and bring together the best of both worlds, allowing you to troubleshoot and debug your applications more effectively. With the rich information about the platform and application telemetry combined together, you are presented with a streamlined view of the issues encountered and this enables you to identify problems easily. Should you open a support case with Microsoft and consent to share diagnostics, this will also enable Microsoft support engineers to review the information from both the platform and App Insights to help you swiftly resolve your case.&lt;/p&gt;

&lt;h2 id=&quot;how-to-enable-application-insights-integration-with-app-service-diagnostics&quot;&gt;How to Enable Application Insights integration with App Service Diagnostics&lt;/h2&gt;

&lt;p&gt;Enabling Application insights integration is as easy as clicking a button in App Services Diagnostics. To enable this feature, visit the &lt;strong&gt;Diagnose and Solve&lt;/strong&gt; blade for your app and choose &lt;strong&gt;Availability and Performance&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/AppServiceDiagnostics-LandingPage.png&quot; alt=&quot;Landing Page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If Application Insights is not integrated for your app already, you will see an option to &lt;strong&gt;Enable Application Insights&lt;/strong&gt; right from this view.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/AppServiceDiagnostics-EnableAIIntegration.png&quot; alt=&quot;Enable Application Insights&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And if Application Insights is already enabled, then you will get an option to &lt;strong&gt;Connect&lt;/strong&gt; it with App Services Diagnostics.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/AppServiceDiagnostics-ConnectAIwithASD.png&quot; alt=&quot;Connect with Application Insights&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This connects the Application Insights resource for the app to App Service Diagnostics and allows you to view the exceptions and dependency information for the app within App Service Diagnostics. At the same time, any engineers engaged with you from Microsoft Support are enabled to leverage this information, provided you have given consent to share diagnostics information while creating a Support case.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/AppServiceDiagnostics-AfterAIIntegration.png&quot; alt=&quot;Application Insights Connected&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-to-expect-after-enabling-application-insights-integration&quot;&gt;What to expect after enabling Application Insights Integration&lt;/h2&gt;

&lt;p&gt;After enabling App Insights Integration feature, App Service Diagnostics starts leveraging App Insights telemetry and points you to exceptions and dependency slowness information in different views that you typically use to diagnose issues. Here is an example of the HTTP Server Errors view changes with Application Insights information.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/AppServiceDiagnostics-DetectorView.png&quot; alt=&quot;Application Insights Detector View&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And drilling down into the HTTP Server Errors view, you can find all details about the failed requests corresponding to the Exceptions in the same view.  As you can see below, the table shows you the exception information, exception message, and the method in the code that was responsible for causing the exception. With the help of this integration, you can not only view the platform issues but also correlate any application issues that caused availability drops to the app.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/AppServiceDiagnostics-ExceptionsView.png&quot; alt=&quot;Exceptions from Application Insights&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-happens-after-you-integrate-application-insights-with-app-service-diagnostics&quot;&gt;What happens after you Integrate Application Insights with App Service Diagnostics&lt;/h2&gt;

&lt;p&gt;When you click &lt;strong&gt;Connect&lt;/strong&gt;, an &lt;em&gt;API&lt;/em&gt; key for your Application Insights is generated with read-only access to the telemetry and this &lt;em&gt;API key&lt;/em&gt; along with the &lt;em&gt;AppId&lt;/em&gt; for the Application Insights resource are stored as a hidden tag in ARM at the Azure App Service app level. At the App Insights Resource level, you may see something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/AppServiceDiagnostics-APIKey.png&quot; alt=&quot;Application Insights API Access&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the App Services side, you should see a new tag created at the app level with the name &lt;strong&gt;hidden-related:diagnostics/applicationInsightsSettings&lt;/strong&gt;. You can view this tag by going to Azure Resource Explorer (&lt;a href=&quot;https://resources.azure.com&quot;&gt;https://resources.azure.com&lt;/a&gt;). The &lt;em&gt;AppId&lt;/em&gt; is stored as is, but the API Key is encrypted using an internal key, so it is kept protected and not left as clear text.&lt;/p&gt;

&lt;p&gt;Using this information, App Services Diagnostics can query the Application Insights resource and is able to merge both the experiences together. For Microsoft support and engineering teams, an equivalent internal tool is available and engineers and engineering teams assisting you on your incidents opened with Microsoft can access this information in similar unified troubleshooting experience.&lt;/p&gt;

&lt;h2 id=&quot;how-to-disable-app-insights-integration&quot;&gt;How to disable App Insights Integration&lt;/h2&gt;

&lt;p&gt;We are working on a user interface that allows you to disable this feature easily under &lt;strong&gt;Diagnose and Solve problems&lt;/strong&gt;. Until then, you can use a PowerShell Script example like this to simple disable the AppInsights integration feature.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;Login-AzureRmAccount&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$subId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;Azure_Subscription_ID&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$rg&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;ResourceGroupName&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$appName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AppName&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$resourceId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/subscriptions/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$subId&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/resourceGroups/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$rg&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/providers/Microsoft.Web/sites/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$appName&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$webApp&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get-AzureRmResource&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ResourceId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$resourceId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$updatedTags&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$t&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$webApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Tags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetEnumerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-ne&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hidden-related:diagnostics/applicationInsightsSettings&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$updatedTags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Set-AzureRmResource&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ResourceId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$resourceId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Tag&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$updatedTags&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next steps&lt;/h2&gt;

&lt;p&gt;So, what are you waiting for :smiley:? Integrate your application with Application Insights and get the unified experience that brings the best of both worlds. We just want to close by sharing some articles around Application Insights.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/azure-monitor/app/app-insights-overview&quot;&gt;What is Application Insights?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/azure-monitor/app/azure-web-apps?tabs=net&quot;&gt;Monitor Azure App Service performance&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/azure-monitor/app/asp-net-exceptions#exceptions&quot;&gt;Instrument Application Code to Track Exceptions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information on App Service Diagnostics, please visit &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/overview-diagnostics&quot;&gt;Azure App Service diagnostics overview&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to share your feedback or questions about &lt;strong&gt;App Service Diagnostics&lt;/strong&gt; by emailing &lt;a href=&quot;mailto:diagnostics@microsoft.com&quot;&gt;diagnostics@microsoft.com&lt;/a&gt; or posting on &lt;a href=&quot;https://feedback.azure.com/forums/169385-web-apps​​​​​​​​​​​​​​&quot;&gt;UserVoice&lt;/a&gt; with “[Diag]” in the title.&lt;/p&gt;</content><author><name>Azure App Service</name></author><category term="diagnostics" /><category term="troubleshooting" /><category term="self-help" /><summary type="html">App Services Diagnostics is a powerful tool that allows you to troubleshoot and mitigate issues within your application. The rich set of tools under the App Services Diagnostics carefully analyze all the telemetry emitted by App Services platform and suggests recommendations and troubleshooting steps that help in keeping your apps up and healthy. We are happy to announce that App Services Diagnostics has now deeper and better integration with Application Insights.</summary></entry><entry><title type="html">Announcing .NET Core 3.1 LTS General Availability on App Service</title><link href="https://azure.github.io/AppService/2020/04/16/Announcing-.NET-Core-3.1-LTS-Generally-Available-on-App-Service.html" rel="alternate" type="text/html" title="Announcing .NET Core 3.1 LTS General Availability on App Service" /><published>2020-04-16T00:00:00+00:00</published><updated>2020-04-16T00:00:00+00:00</updated><id>https://azure.github.io/AppService/2020/04/16/Announcing%20.NET%20Core%203.1%20LTS%20Generally%20Available%20on%20App%20Service</id><content type="html" xml:base="https://azure.github.io/AppService/2020/04/16/Announcing-.NET-Core-3.1-LTS-Generally-Available-on-App-Service.html">&lt;p&gt;App Service is announcing GA of .NET Core 3.1 LTS on Linux &amp;amp; Windows today.  If you are running .NET Core 3.0 applications, which had its end-of-life date on March 3rd, 2020 you can update to and create .NET Core 3.1 applications in the Azure App Service portal now. You can also view this &lt;a href=&quot;https://aspnetcoreon.azurewebsites.net/#.NET%20Core%20SDK&quot;&gt;map&lt;/a&gt; to see available regions running .NET Core 3.1 (Windows Only).&lt;/p&gt;

&lt;h2 id=&quot;net-core-31-long-term-support&quot;&gt;.NET Core 3.1 Long-term support&lt;/h2&gt;

&lt;p&gt;.NET Core 3.1 is the Long-term support release which is supported by Microsoft for three years from it’s release date (&lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/&quot;&gt;December 2019&lt;/a&gt;). The release focuses on minor improvements to .NET Core 3.0 and is the recommended way to prepare for .NET 5.  More information about end of life dates and the new release can be found &lt;a href=&quot;https://docs.microsoft.com/dotnet/core/whats-new/dotnet-core-3-1&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;web-app-development&quot;&gt;Web App Development&lt;/h2&gt;

&lt;p&gt;When creating your Web App in the portal, you can choose &lt;strong&gt;.NET Core 3.1 LTS&lt;/strong&gt; as your runtime stack with your choice of &lt;em&gt;Linux&lt;/em&gt; or &lt;em&gt;Windows&lt;/em&gt; for your operating system and deploy the application as you usually would.&lt;/p&gt;

&lt;p&gt;If using Windows, you can check your version using the &lt;strong&gt;Console&lt;/strong&gt; under &lt;strong&gt;Development Tools&lt;/strong&gt; in your Web App blade. Running the &lt;code class=&quot;highlighter-rouge&quot;&gt;dotnet --list-runtimes&lt;/code&gt; command will show your app including 3.1.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/windowsconsole.jpg&quot; alt=&quot;Windows Console&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For Linux, you will run the same command &lt;code class=&quot;highlighter-rouge&quot;&gt;dotnet --list-runtimes&lt;/code&gt; using the &lt;strong&gt;SSH&lt;/strong&gt; tool under &lt;strong&gt;Development Tools&lt;/strong&gt; in your Web App blade to view 3.1 running on your app.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/linuxssh.jpg&quot; alt=&quot;Linux SSH&quot; /&gt;&lt;/p&gt;</content><author><name>Azure App Service</name></author><category term="dotnet" /><summary type="html">App Service is announcing GA of .NET Core 3.1 LTS on Linux &amp;amp; Windows today. If you are running .NET Core 3.0 applications, which had its end-of-life date on March 3rd, 2020 you can update to and create .NET Core 3.1 applications in the Azure App Service portal now. You can also view this map to see available regions running .NET Core 3.1 (Windows Only).</summary></entry><entry><title type="html">Get started with GitHub Actions and App Service</title><link href="https://azure.github.io/AppService/2020/04/14/Get-Started-with-GitHub-Actions-and-Azure-Webapps.html" rel="alternate" type="text/html" title="Get started with GitHub Actions and App Service" /><published>2020-04-14T00:00:00+00:00</published><updated>2020-04-14T00:00:00+00:00</updated><id>https://azure.github.io/AppService/2020/04/14/Get%20Started%20with%20GitHub%20Actions%20and%20Azure%20Webapps</id><content type="html" xml:base="https://azure.github.io/AppService/2020/04/14/Get-Started-with-GitHub-Actions-and-Azure-Webapps.html">&lt;p&gt;Last year we &lt;a href=&quot;/AppService/2019/08/10/Github-actions-for-webapps.html&quot;&gt;shared an article&lt;/a&gt; that demonstrated how to deploy your application to App Service using &lt;a href=&quot;https://github.com/features/actions&quot;&gt;GitHub Actions&lt;/a&gt;. I am excited to share that we have added GitHub Actions as a build provider in the Deployment Center. This means it is even easier for developers to set up a continuous delivery pipeline with GitHub Actions. Follow the video or instructions below to get started.&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com //--&gt;
&lt;div class=&quot;responsive-video-container&quot;&gt;

  &lt;iframe src=&quot;https://www.youtube-nocookie.com/embed/b2oyxbSbLPA&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;/div&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting started&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;First, create an Azure Webapp if you do not already have one. Follow one of &lt;a href=&quot;https://docs.microsoft.com/azure/app-service/containers/quickstart-dotnetcore&quot;&gt;these quick start guides&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Once the Webapp is created, open the Azure Portal and navigate to your Webapp. On the left side, click &lt;strong&gt;Deployment Center&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the Deployment Center, Select &lt;strong&gt;GitHub&lt;/strong&gt;. You will be prompted to authenticate with GitHub if this is your first time using the Deployment Center. Click &lt;strong&gt;Continue&lt;/strong&gt; at the bottom.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/deploy-center.png&quot; alt=&quot;Navigate to the Deployment Center&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the next screen, choose &lt;strong&gt;GitHub Actions (Preview)&lt;/strong&gt; as your build provider.  Click &lt;strong&gt;Continue&lt;/strong&gt; at the bottom.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/select-gh-actions.png&quot; alt=&quot;Select GitHub Actions&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the following panel, use the dropdowns to select your repository and branch. The branch you choose will be deployed to the Webapp. Next, choose your language and version. When you are done, click &lt;strong&gt;Continue&lt;/strong&gt; at the bottom.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/select-repo-branch-runtime.png&quot; alt=&quot;Select your repo, branch, and runtime&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The final screen shows a preview of the workflow file that will be committed into your repository under &lt;code class=&quot;highlighter-rouge&quot;&gt;.github/workflows/&lt;/code&gt;. The workflow file will check out your branch, set your language and version, build your application, and deploy it to your Webapp. The workflow will run any time there is a commit on your specified branch.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/summary.png&quot; alt=&quot;Select GitHub Actions&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Click &lt;strong&gt;Finish&lt;/strong&gt; after reviewing your selections. The Portal will commit this to the repository, which will trigger the the workflow to run.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You will be forwarded to the Deployment Center Dashboard, where you can see a list of your recent deployments. You can use the buttons at the top to disconnect the dashboard.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/AppService/media/2020/04/dashboard.png&quot; alt=&quot;Deployment Center Dashboard&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next steps&lt;/h2&gt;

&lt;p&gt;Congratulations! You now have an automated workflow that will build and deploy your app whenever new commits are pushed to the branch. As your application grows in complexity, so too can your workflows. There are plenty of &lt;a href=&quot;https://github.com/azure/actions#github-actions-for-azure&quot;&gt;other GitHub Actions&lt;/a&gt; to interact with the rest of your Azure Services as well.&lt;/p&gt;

&lt;p&gt;As always, don’t forget to &lt;a href=&quot;https://feedback.azure.com/forums/169385-web-apps&quot;&gt;use UserVoice&lt;/a&gt; to suggest enhancements and vote for other suggestions.&lt;/p&gt;

&lt;h2 id=&quot;more-information&quot;&gt;More information&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Documentation:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/app-service/deploy-github-actions&quot;&gt;GitHub Actions and App Service&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/azure/webapps-deploy&quot;&gt;Webapps deploy action&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The workflow for Python uses the &lt;a href=&quot;https://github.com/azure/appservice-build&quot;&gt;App Service Build Action&lt;/a&gt; to ensure the app is built correctly for App Service.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Azure App Service</name></author><summary type="html">Last year we shared an article that demonstrated how to deploy your application to App Service using GitHub Actions. I am excited to share that we have added GitHub Actions as a build provider in the Deployment Center. This means it is even easier for developers to set up a continuous delivery pipeline with GitHub Actions. Follow the video or instructions below to get started.</summary></entry></feed>